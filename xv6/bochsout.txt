00000000000i[     ] Bochs x86 Emulator 2.6.2
00000000000i[     ]   Built from SVN snapshot on May 26, 2013
00000000000i[     ] Compiled on May 26 2013 at 10:10:55
00000000000i[     ] System configuration
00000000000i[     ]   processors: 1 (cores=1, HT threads=1)
00000000000i[     ]   A20 line support: yes
00000000000i[     ]   load configurable MSRs from file "msrs.def"
00000000000i[     ] IPS is set to 50000000
00000000000i[     ] CPU configuration
00000000000i[     ]   SMP support: no
00000000000i[     ]   level: 6
00000000000i[     ]   APIC support: xapic
00000000000i[     ]   FPU support: yes
00000000000i[     ]   MMX support: yes
00000000000i[     ]   3dnow! support: no
00000000000i[     ]   SEP support: yes
00000000000i[     ]   SSE support: sse2
00000000000i[     ]   XSAVE support: no 
00000000000i[     ]   AES support: no
00000000000i[     ]   MOVBE support: no
00000000000i[     ]   ADX support: no
00000000000i[     ]   x86-64 support: yes
00000000000i[     ]   1G paging support: no
00000000000i[     ]   MWAIT support: yes
00000000000i[     ]   VMX support: 1
00000000000i[     ] Optimization configuration
00000000000i[     ]   RepeatSpeedups support: yes
00000000000i[     ]   Fast function calls: yes
00000000000i[     ]   Handlers Chaining speedups: yes
00000000000i[     ] Devices configuration
00000000000i[     ]   NE2000 support: yes
00000000000i[     ]   PCI support: yes, enabled=yes
00000000000i[     ]   SB16 support: yes
00000000000i[     ]   USB support: yes
00000000000i[     ]   VGA extension support: vbe cirrus voodoo
00000000000i[MEM0 ] allocated memory at 03770020. after alignment, vector=03771000
00000000000i[MEM0 ] 512.00MB
00000000000i[MEM0 ] mem block size = 0x00100000, blocks=512
00000000000i[MEM0 ] rom at 0xfffe0000/131072 ('C:\Bochs-2.6.2/BIOS-bochs-latest')
00000000000i[     ] init_dev of 'pci' plugin device by virtual method
00000000000i[DEV  ] i440FX PMC present at device 0, function 0
00000000000i[     ] init_dev of 'pci2isa' plugin device by virtual method
00000000000i[DEV  ] PIIX3 PCI-to-ISA bridge present at device 1, function 0
00000000000i[     ] init_dev of 'cmos' plugin device by virtual method
00000000000i[CMOS ] Using local time for initial clock
00000000000i[CMOS ] Setting initial clock to: Wed Jun 25 18:31:38 2014 (time0=1403710298)
00000000000i[     ] init_dev of 'dma' plugin device by virtual method
00000000000i[DMA  ] channel 4 used by cascade
00000000000i[     ] init_dev of 'pic' plugin device by virtual method
00000000000i[     ] init_dev of 'pit' plugin device by virtual method
00000000000i[     ] init_dev of 'floppy' plugin device by virtual method
00000000000i[DMA  ] channel 2 used by Floppy Drive
00000000000i[FDD  ] tried to open '/dev/fd0' read/write: No such file or directory
00000000000i[FDD  ] tried to open '/dev/fd0' read only: No such file or directory
00000000000i[     ] init_dev of 'vga' plugin device by virtual method
00000000000i[MEM0 ] Register memory access handlers: 0x0000000a0000 - 0x0000000bffff
00000000000i[VGA  ] interval=200000
00000000000i[MEM0 ] Register memory access handlers: 0x0000e0000000 - 0x0000e0ffffff
00000000000i[BXVGA] VBE Bochs Display Extension Enabled
00000000000i[WGUI ] Desktop Window dimensions: 1920 x 1080
00000000000i[WGUI ] Number of Mouse Buttons = 16
00000000000i[WGUI ] IME disabled
00000000000i[MEM0 ] rom at 0xc0000/41472 ('C:\Bochs-2.6.2/VGABIOS-lgpl-latest')
00000000000i[     ] init_dev of 'acpi' plugin device by virtual method
00000000000i[DEV  ] ACPI Controller present at device 1, function 3
00000000000i[     ] init_dev of 'ioapic' plugin device by virtual method
00000000000i[IOAP ] initializing I/O APIC
00000000000i[MEM0 ] Register memory access handlers: 0x0000fec00000 - 0x0000fec00fff
00000000000i[IOAP ] IOAPIC enabled (base address = 0xfec00000)
00000000000i[     ] init_dev of 'keyboard' plugin device by virtual method
00000000000i[KBD  ] will paste characters every 400 keyboard ticks
00000000000i[     ] init_dev of 'harddrv' plugin device by virtual method
00000000000i[HD   ] HD on ata0-0: 'xv6.img', 'flat' mode
00000000000i[IMG  ] hd_size: 5120000
00000000000i[HD   ] ata0-0: autodetect geometry: CHS=9/16/63
00000000000i[HD   ] ata0-0: extra data outside of CHS address range
00000000000i[HD   ] HD on ata0-1: 'fs.img', 'flat' mode
00000000000i[IMG  ] hd_size: 524288
00000000000i[HD   ] ata0-1: autodetect geometry: CHS=1/16/63
00000000000i[HD   ] ata0-1: extra data outside of CHS address range
00000000000i[HD   ] translation on ata0-0 set to 'none'
00000000000i[HD   ] translation on ata0-1 set to 'none'
00000000000i[HD   ] Using boot sequence disk, none, none
00000000000i[HD   ] Floppy boot signature check is enabled
00000000000i[     ] init_dev of 'pci_ide' plugin device by virtual method
00000000000i[DEV  ] PIIX3 PCI IDE controller present at device 1, function 1
00000000000i[     ] init_dev of 'unmapped' plugin device by virtual method
00000000000i[     ] init_dev of 'biosdev' plugin device by virtual method
00000000000i[     ] init_dev of 'speaker' plugin device by virtual method
00000000000i[     ] init_dev of 'extfpuirq' plugin device by virtual method
00000000000i[     ] init_dev of 'parallel' plugin device by virtual method
00000000000i[PAR  ] parallel port 1 at 0x0378 irq 7
00000000000i[     ] init_dev of 'serial' plugin device by virtual method
00000000000i[SER  ] com1 at 0x03f8 irq 4
00000000000i[     ] init_dev of 'gameport' plugin device by virtual method
00000000000i[     ] init_dev of 'usb_uhci' plugin device by virtual method
00000000000i[DEV  ] Experimental USB UHCI present at device 1, function 2
00000000000i[UHCI ] USB UHCI initialized
00000000000i[     ] register state of 'pci' plugin device by virtual method
00000000000i[     ] register state of 'pci2isa' plugin device by virtual method
00000000000i[     ] register state of 'cmos' plugin device by virtual method
00000000000i[     ] register state of 'dma' plugin device by virtual method
00000000000i[     ] register state of 'pic' plugin device by virtual method
00000000000i[     ] register state of 'pit' plugin device by virtual method
00000000000i[     ] register state of 'floppy' plugin device by virtual method
00000000000i[     ] register state of 'vga' plugin device by virtual method
00000000000i[     ] register state of 'unmapped' plugin device by virtual method
00000000000i[     ] register state of 'biosdev' plugin device by virtual method
00000000000i[     ] register state of 'speaker' plugin device by virtual method
00000000000i[     ] register state of 'extfpuirq' plugin device by virtual method
00000000000i[     ] register state of 'parallel' plugin device by virtual method
00000000000i[     ] register state of 'serial' plugin device by virtual method
00000000000i[     ] register state of 'gameport' plugin device by virtual method
00000000000i[     ] register state of 'usb_uhci' plugin device by virtual method
00000000000i[     ] register state of 'acpi' plugin device by virtual method
00000000000i[     ] register state of 'ioapic' plugin device by virtual method
00000000000i[     ] register state of 'keyboard' plugin device by virtual method
00000000000i[     ] register state of 'harddrv' plugin device by virtual method
00000000000i[     ] register state of 'pci_ide' plugin device by virtual method
00000000000i[SYS  ] bx_pc_system_c::Reset(HARDWARE) called
00000000000i[CPU0 ] cpu hardware reset
00000000000i[APIC0] allocate APIC id=0 (MMIO enabled) to 0x0000fee00000
00000000000i[CPU0 ] CPUID[0x00000000]: 00000005 756e6547 6c65746e 49656e69
00000000000i[CPU0 ] CPUID[0x00000001]: 00000633 00010800 00002028 1fcbfbff
00000000000i[CPU0 ] CPUID[0x00000002]: 00410601 00000000 00000000 00000000
00000000000i[CPU0 ] CPUID[0x00000003]: 00000000 00000000 00000000 00000000
00000000000i[CPU0 ] CPUID[0x00000004]: 00000000 00000000 00000000 00000000
00000000000i[CPU0 ] CPUID[0x00000005]: 00000040 00000040 00000003 00000020
00000000000i[CPU0 ] CPUID[0x80000000]: 80000008 00000000 00000000 00000000
00000000000i[CPU0 ] CPUID[0x80000001]: 00000000 00000000 00000101 2a100000
00000000000i[CPU0 ] CPUID[0x80000002]: 20202020 20202020 20202020 6e492020
00000000000i[CPU0 ] CPUID[0x80000003]: 286c6574 50202952 69746e65 52286d75
00000000000i[CPU0 ] CPUID[0x80000004]: 20342029 20555043 20202020 00202020
00000000000i[CPU0 ] CPUID[0x80000005]: 01ff01ff 01ff01ff 40020140 40020140
00000000000i[CPU0 ] CPUID[0x80000006]: 00000000 42004200 02008140 00000000
00000000000i[CPU0 ] CPUID[0x80000007]: 00000000 00000000 00000000 00000000
00000000000i[CPU0 ] CPUID[0x80000008]: 00003028 00000000 00000000 00000000
00000000000i[     ] reset of 'pci' plugin device by virtual method
00000000000i[     ] reset of 'pci2isa' plugin device by virtual method
00000000000i[     ] reset of 'cmos' plugin device by virtual method
00000000000i[     ] reset of 'dma' plugin device by virtual method
00000000000i[     ] reset of 'pic' plugin device by virtual method
00000000000i[     ] reset of 'pit' plugin device by virtual method
00000000000i[     ] reset of 'floppy' plugin device by virtual method
00000000000i[     ] reset of 'vga' plugin device by virtual method
00000000000i[     ] reset of 'acpi' plugin device by virtual method
00000000000i[     ] reset of 'ioapic' plugin device by virtual method
00000000000i[     ] reset of 'keyboard' plugin device by virtual method
00000000000i[     ] reset of 'harddrv' plugin device by virtual method
00000000000i[     ] reset of 'pci_ide' plugin device by virtual method
00000000000i[     ] reset of 'unmapped' plugin device by virtual method
00000000000i[     ] reset of 'biosdev' plugin device by virtual method
00000000000i[     ] reset of 'speaker' plugin device by virtual method
00000000000i[SPEAK] Using system beep for output
00000000000i[     ] reset of 'extfpuirq' plugin device by virtual method
00000000000i[     ] reset of 'parallel' plugin device by virtual method
00000000000i[     ] reset of 'serial' plugin device by virtual method
00000000000i[     ] reset of 'gameport' plugin device by virtual method
00000000000i[     ] reset of 'usb_uhci' plugin device by virtual method
00000000019i[MEM0 ] allocate_block: block=0x0 used 0x1 of 0x100
00000004655i[BIOS ] $Revision: 11545 $ $Date: 2012-11-11 09:11:17 +0100 (So, 11. Nov 2012) $
00000337555i[KBD  ] reset-disable command received
00000363219i[BIOS ] Starting rombios32
00000363660i[BIOS ] Shutdown flag 0
00000364238i[BIOS ] ram_size=0x20000000
00000364718i[BIOS ] ram_end=512MB
00010000004i[WGUI ] dimension update x=720 y=400 fontheight=16 fontwidth=9 bpp=8
00012037837i[BIOS ] Found 1 cpu(s)
00012051856i[BIOS ] bios_table_addr: 0x000fa448 end=0x000fcc00
00012375001i[PCI  ] i440FX PMC write to PAM register 59 (TLB Flush)
00012707818i[P2I  ] PCI IRQ routing: PIRQA# set to 0x0b
00012707843i[P2I  ] PCI IRQ routing: PIRQB# set to 0x09
00012707843i[P2I  ] PCI IRQ routing: PIRQC# set to 0x0b
00012707843i[P2I  ] PCI IRQ routing: PIRQD# set to 0x09
00012707843i[P2I  ] write: ELCR2 = 0x0a
00012708497i[BIOS ] PIIX3/PIIX4 init: elcr=00 0a
00012715967i[BIOS ] PCI: bus=0 devfn=0x00: vendor_id=0x8086 device_id=0x1237 class=0x0600
00012718237i[BIOS ] PCI: bus=0 devfn=0x08: vendor_id=0x8086 device_id=0x7000 class=0x0601
00012720346i[BIOS ] PCI: bus=0 devfn=0x09: vendor_id=0x8086 device_id=0x7010 class=0x0101
00012720965i[PIDE ] new BM-DMA address: 0xc000
00012721486i[BIOS ] region 4: 0x0000c000
00012723194i[BIOS ] PCI: bus=0 devfn=0x0a: vendor_id=0x8086 device_id=0x7020 class=0x0c03
00012723788i[UHCI ] new base address: 0xc020
00012724309i[BIOS ] region 4: 0x0000c020
00012724475i[UHCI ] new irq line = 9
00012726026i[BIOS ] PCI: bus=0 devfn=0x0b: vendor_id=0x8086 device_id=0x7113 class=0x0680
00012726454i[ACPI ] new irq line = 11
00012726683i[ACPI ] new irq line = 9
00012726704i[ACPI ] new PM base address: 0xb000
00012726704i[ACPI ] new SM base address: 0xb100
00012726736i[PCI  ] setting SMRAM control register to 0x4a
00012890854i[CPU0 ] Enter to System Management Mode
00012890854i[CPU0 ] enter_system_management_mode: temporary disable VMX while in SMM mode
00012890858i[CPU0 ] RSM: Resuming from System Management Mode
00013054877i[PCI  ] setting SMRAM control register to 0x0a
00013069449i[BIOS ] MP table addr=0x000fa520 MPC table addr=0x000fa450 size=0xc8
00013071397i[BIOS ] SMBIOS table addr=0x000fa530
00013071616i[MEM0 ] allocate_block: block=0x1ff used 0x2 of 0x100
00013073347i[BIOS ] ACPI tables: RSDP addr=0x000fa650 ACPI DATA addr=0x1fff0000 size=0xf72
00013076789i[BIOS ] Firmware waking vector 0x1fff00cc
00013078773i[PCI  ] i440FX PMC write to PAM register 59 (TLB Flush)
00013079327i[BIOS ] bios_table_cur_addr: 0x000fa674
00013207131i[VBIOS] VGABios $Id: vgabios.c,v 1.75 2011/10/15 14:07:21 vruppert Exp $
00013207201i[BXVGA] VBE known Display Interface b0c0
00013207233i[BXVGA] VBE known Display Interface b0c5
00013210159i[VBIOS] VBE Bios $Id: vbe.c,v 1.64 2011/07/19 18:25:05 vruppert Exp $
00013549518i[BIOS ] ata0-0: PCHS=9/16/63 translation=none LCHS=9/16/63
00013603215i[BIOS ] ata0-1: PCHS=1/16/63 translation=none LCHS=1/16/63
00162058617i[BIOS ] Booting from 0000:7c00
00162060334i[MEM0 ] allocate_block: block=0x1 used 0x3 of 0x100
00162389310i[MEM0 ] allocate_block: block=0x2 used 0x4 of 0x100
00162677310i[MEM0 ] allocate_block: block=0x3 used 0x5 of 0x100
00167148891i[APIC0] set timer divide factor to 1
00167158920e[SER  ] com1: write to tx hold register when not empty
00167162415e[SER  ] com1: write to tx hold register when not empty
00167165910e[SER  ] com1: write to tx hold register when not empty
00167169405e[SER  ] com1: write to tx hold register when not empty
00167172900e[SER  ] com1: write to tx hold register when not empty
00167185419i[MEM0 ] allocate_block: block=0x4 used 0x6 of 0x100
00167473419i[MEM0 ] allocate_block: block=0x5 used 0x7 of 0x100
00167761419i[MEM0 ] allocate_block: block=0x6 used 0x8 of 0x100
00168049419i[MEM0 ] allocate_block: block=0x7 used 0x9 of 0x100
00168337419i[MEM0 ] allocate_block: block=0x8 used 0xa of 0x100
00168625419i[MEM0 ] allocate_block: block=0x9 used 0xb of 0x100
00168913419i[MEM0 ] allocate_block: block=0xa used 0xc of 0x100
00169201419i[MEM0 ] allocate_block: block=0xb used 0xd of 0x100
00169489419i[MEM0 ] allocate_block: block=0xc used 0xe of 0x100
00169777419i[MEM0 ] allocate_block: block=0xd used 0xf of 0x100
00170065419i[MEM0 ] allocate_block: block=0xe used 0x10 of 0x100
00170353419i[MEM0 ] allocate_block: block=0xf used 0x11 of 0x100
00170641419i[MEM0 ] allocate_block: block=0x10 used 0x12 of 0x100
00170929419i[MEM0 ] allocate_block: block=0x11 used 0x13 of 0x100
00171217419i[MEM0 ] allocate_block: block=0x12 used 0x14 of 0x100
00171505419i[MEM0 ] allocate_block: block=0x13 used 0x15 of 0x100
00171793419i[MEM0 ] allocate_block: block=0x14 used 0x16 of 0x100
00172081419i[MEM0 ] allocate_block: block=0x15 used 0x17 of 0x100
00172369419i[MEM0 ] allocate_block: block=0x16 used 0x18 of 0x100
00172657419i[MEM0 ] allocate_block: block=0x17 used 0x19 of 0x100
00172945419i[MEM0 ] allocate_block: block=0x18 used 0x1a of 0x100
00173233419i[MEM0 ] allocate_block: block=0x19 used 0x1b of 0x100
00173521419i[MEM0 ] allocate_block: block=0x1a used 0x1c of 0x100
00173809419i[MEM0 ] allocate_block: block=0x1b used 0x1d of 0x100
00174097419i[MEM0 ] allocate_block: block=0x1c used 0x1e of 0x100
00174385419i[MEM0 ] allocate_block: block=0x1d used 0x1f of 0x100
00174673419i[MEM0 ] allocate_block: block=0x1e used 0x20 of 0x100
00174961419i[MEM0 ] allocate_block: block=0x1f used 0x21 of 0x100
00175249419i[MEM0 ] allocate_block: block=0x20 used 0x22 of 0x100
00175537419i[MEM0 ] allocate_block: block=0x21 used 0x23 of 0x100
00175825419i[MEM0 ] allocate_block: block=0x22 used 0x24 of 0x100
00176113419i[MEM0 ] allocate_block: block=0x23 used 0x25 of 0x100
00176401419i[MEM0 ] allocate_block: block=0x24 used 0x26 of 0x100
00176689419i[MEM0 ] allocate_block: block=0x25 used 0x27 of 0x100
00176977419i[MEM0 ] allocate_block: block=0x26 used 0x28 of 0x100
00177265419i[MEM0 ] allocate_block: block=0x27 used 0x29 of 0x100
00177553419i[MEM0 ] allocate_block: block=0x28 used 0x2a of 0x100
00177841419i[MEM0 ] allocate_block: block=0x29 used 0x2b of 0x100
00178129419i[MEM0 ] allocate_block: block=0x2a used 0x2c of 0x100
00178417419i[MEM0 ] allocate_block: block=0x2b used 0x2d of 0x100
00178705419i[MEM0 ] allocate_block: block=0x2c used 0x2e of 0x100
00178993419i[MEM0 ] allocate_block: block=0x2d used 0x2f of 0x100
00179281419i[MEM0 ] allocate_block: block=0x2e used 0x30 of 0x100
00179569419i[MEM0 ] allocate_block: block=0x2f used 0x31 of 0x100
00179857419i[MEM0 ] allocate_block: block=0x30 used 0x32 of 0x100
00180145419i[MEM0 ] allocate_block: block=0x31 used 0x33 of 0x100
00180433419i[MEM0 ] allocate_block: block=0x32 used 0x34 of 0x100
00180721419i[MEM0 ] allocate_block: block=0x33 used 0x35 of 0x100
00181009419i[MEM0 ] allocate_block: block=0x34 used 0x36 of 0x100
00181297419i[MEM0 ] allocate_block: block=0x35 used 0x37 of 0x100
00181585419i[MEM0 ] allocate_block: block=0x36 used 0x38 of 0x100
00181873419i[MEM0 ] allocate_block: block=0x37 used 0x39 of 0x100
00182161419i[MEM0 ] allocate_block: block=0x38 used 0x3a of 0x100
00182449419i[MEM0 ] allocate_block: block=0x39 used 0x3b of 0x100
00182737419i[MEM0 ] allocate_block: block=0x3a used 0x3c of 0x100
00183025419i[MEM0 ] allocate_block: block=0x3b used 0x3d of 0x100
00183313419i[MEM0 ] allocate_block: block=0x3c used 0x3e of 0x100
00183601419i[MEM0 ] allocate_block: block=0x3d used 0x3f of 0x100
00183889419i[MEM0 ] allocate_block: block=0x3e used 0x40 of 0x100
00184177419i[MEM0 ] allocate_block: block=0x3f used 0x41 of 0x100
00184465419i[MEM0 ] allocate_block: block=0x40 used 0x42 of 0x100
00184753419i[MEM0 ] allocate_block: block=0x41 used 0x43 of 0x100
00185041419i[MEM0 ] allocate_block: block=0x42 used 0x44 of 0x100
00185329419i[MEM0 ] allocate_block: block=0x43 used 0x45 of 0x100
00185617419i[MEM0 ] allocate_block: block=0x44 used 0x46 of 0x100
00185905419i[MEM0 ] allocate_block: block=0x45 used 0x47 of 0x100
00186193419i[MEM0 ] allocate_block: block=0x46 used 0x48 of 0x100
00186481419i[MEM0 ] allocate_block: block=0x47 used 0x49 of 0x100
00186769419i[MEM0 ] allocate_block: block=0x48 used 0x4a of 0x100
00187057419i[MEM0 ] allocate_block: block=0x49 used 0x4b of 0x100
00187345419i[MEM0 ] allocate_block: block=0x4a used 0x4c of 0x100
00187633419i[MEM0 ] allocate_block: block=0x4b used 0x4d of 0x100
00187921419i[MEM0 ] allocate_block: block=0x4c used 0x4e of 0x100
00188209419i[MEM0 ] allocate_block: block=0x4d used 0x4f of 0x100
00188497419i[MEM0 ] allocate_block: block=0x4e used 0x50 of 0x100
00188785419i[MEM0 ] allocate_block: block=0x4f used 0x51 of 0x100
00189073419i[MEM0 ] allocate_block: block=0x50 used 0x52 of 0x100
00189361419i[MEM0 ] allocate_block: block=0x51 used 0x53 of 0x100
00189649419i[MEM0 ] allocate_block: block=0x52 used 0x54 of 0x100
00189937419i[MEM0 ] allocate_block: block=0x53 used 0x55 of 0x100
00190225419i[MEM0 ] allocate_block: block=0x54 used 0x56 of 0x100
00190513419i[MEM0 ] allocate_block: block=0x55 used 0x57 of 0x100
00190801419i[MEM0 ] allocate_block: block=0x56 used 0x58 of 0x100
00191089419i[MEM0 ] allocate_block: block=0x57 used 0x59 of 0x100
00191377419i[MEM0 ] allocate_block: block=0x58 used 0x5a of 0x100
00191665419i[MEM0 ] allocate_block: block=0x59 used 0x5b of 0x100
00191953419i[MEM0 ] allocate_block: block=0x5a used 0x5c of 0x100
00192241419i[MEM0 ] allocate_block: block=0x5b used 0x5d of 0x100
00192529419i[MEM0 ] allocate_block: block=0x5c used 0x5e of 0x100
00192817419i[MEM0 ] allocate_block: block=0x5d used 0x5f of 0x100
00193105419i[MEM0 ] allocate_block: block=0x5e used 0x60 of 0x100
00193393419i[MEM0 ] allocate_block: block=0x5f used 0x61 of 0x100
00193681419i[MEM0 ] allocate_block: block=0x60 used 0x62 of 0x100
00193969419i[MEM0 ] allocate_block: block=0x61 used 0x63 of 0x100
00194257419i[MEM0 ] allocate_block: block=0x62 used 0x64 of 0x100
00194545419i[MEM0 ] allocate_block: block=0x63 used 0x65 of 0x100
00194833419i[MEM0 ] allocate_block: block=0x64 used 0x66 of 0x100
00195121419i[MEM0 ] allocate_block: block=0x65 used 0x67 of 0x100
00195409419i[MEM0 ] allocate_block: block=0x66 used 0x68 of 0x100
00195697419i[MEM0 ] allocate_block: block=0x67 used 0x69 of 0x100
00195985419i[MEM0 ] allocate_block: block=0x68 used 0x6a of 0x100
00196273419i[MEM0 ] allocate_block: block=0x69 used 0x6b of 0x100
00196561419i[MEM0 ] allocate_block: block=0x6a used 0x6c of 0x100
00196849419i[MEM0 ] allocate_block: block=0x6b used 0x6d of 0x100
00197137419i[MEM0 ] allocate_block: block=0x6c used 0x6e of 0x100
00197425419i[MEM0 ] allocate_block: block=0x6d used 0x6f of 0x100
00197713419i[MEM0 ] allocate_block: block=0x6e used 0x70 of 0x100
00198001419i[MEM0 ] allocate_block: block=0x6f used 0x71 of 0x100
00198289419i[MEM0 ] allocate_block: block=0x70 used 0x72 of 0x100
00198577419i[MEM0 ] allocate_block: block=0x71 used 0x73 of 0x100
00198865419i[MEM0 ] allocate_block: block=0x72 used 0x74 of 0x100
00199153419i[MEM0 ] allocate_block: block=0x73 used 0x75 of 0x100
00199441419i[MEM0 ] allocate_block: block=0x74 used 0x76 of 0x100
00199729419i[MEM0 ] allocate_block: block=0x75 used 0x77 of 0x100
00200017419i[MEM0 ] allocate_block: block=0x76 used 0x78 of 0x100
00200305419i[MEM0 ] allocate_block: block=0x77 used 0x79 of 0x100
00200593419i[MEM0 ] allocate_block: block=0x78 used 0x7a of 0x100
00200881419i[MEM0 ] allocate_block: block=0x79 used 0x7b of 0x100
00201169419i[MEM0 ] allocate_block: block=0x7a used 0x7c of 0x100
00201457419i[MEM0 ] allocate_block: block=0x7b used 0x7d of 0x100
00201745419i[MEM0 ] allocate_block: block=0x7c used 0x7e of 0x100
00202033419i[MEM0 ] allocate_block: block=0x7d used 0x7f of 0x100
00202321419i[MEM0 ] allocate_block: block=0x7e used 0x80 of 0x100
00202609419i[MEM0 ] allocate_block: block=0x7f used 0x81 of 0x100
00202897419i[MEM0 ] allocate_block: block=0x80 used 0x82 of 0x100
00203185419i[MEM0 ] allocate_block: block=0x81 used 0x83 of 0x100
00203473419i[MEM0 ] allocate_block: block=0x82 used 0x84 of 0x100
00203761419i[MEM0 ] allocate_block: block=0x83 used 0x85 of 0x100
00204049419i[MEM0 ] allocate_block: block=0x84 used 0x86 of 0x100
00204337419i[MEM0 ] allocate_block: block=0x85 used 0x87 of 0x100
00204625419i[MEM0 ] allocate_block: block=0x86 used 0x88 of 0x100
00204913419i[MEM0 ] allocate_block: block=0x87 used 0x89 of 0x100
00205201419i[MEM0 ] allocate_block: block=0x88 used 0x8a of 0x100
00205489419i[MEM0 ] allocate_block: block=0x89 used 0x8b of 0x100
00205777419i[MEM0 ] allocate_block: block=0x8a used 0x8c of 0x100
00206065419i[MEM0 ] allocate_block: block=0x8b used 0x8d of 0x100
00206353419i[MEM0 ] allocate_block: block=0x8c used 0x8e of 0x100
00206641419i[MEM0 ] allocate_block: block=0x8d used 0x8f of 0x100
00206929419i[MEM0 ] allocate_block: block=0x8e used 0x90 of 0x100
00207217419i[MEM0 ] allocate_block: block=0x8f used 0x91 of 0x100
00207505419i[MEM0 ] allocate_block: block=0x90 used 0x92 of 0x100
00207793419i[MEM0 ] allocate_block: block=0x91 used 0x93 of 0x100
00208081419i[MEM0 ] allocate_block: block=0x92 used 0x94 of 0x100
00208369419i[MEM0 ] allocate_block: block=0x93 used 0x95 of 0x100
00208657419i[MEM0 ] allocate_block: block=0x94 used 0x96 of 0x100
00208945419i[MEM0 ] allocate_block: block=0x95 used 0x97 of 0x100
00209233419i[MEM0 ] allocate_block: block=0x96 used 0x98 of 0x100
00209521419i[MEM0 ] allocate_block: block=0x97 used 0x99 of 0x100
00209809419i[MEM0 ] allocate_block: block=0x98 used 0x9a of 0x100
00210097419i[MEM0 ] allocate_block: block=0x99 used 0x9b of 0x100
00210385419i[MEM0 ] allocate_block: block=0x9a used 0x9c of 0x100
00210673419i[MEM0 ] allocate_block: block=0x9b used 0x9d of 0x100
00210961419i[MEM0 ] allocate_block: block=0x9c used 0x9e of 0x100
00211249419i[MEM0 ] allocate_block: block=0x9d used 0x9f of 0x100
00211537419i[MEM0 ] allocate_block: block=0x9e used 0xa0 of 0x100
00211825419i[MEM0 ] allocate_block: block=0x9f used 0xa1 of 0x100
00212113419i[MEM0 ] allocate_block: block=0xa0 used 0xa2 of 0x100
00212401419i[MEM0 ] allocate_block: block=0xa1 used 0xa3 of 0x100
00212689419i[MEM0 ] allocate_block: block=0xa2 used 0xa4 of 0x100
00212977419i[MEM0 ] allocate_block: block=0xa3 used 0xa5 of 0x100
00213265419i[MEM0 ] allocate_block: block=0xa4 used 0xa6 of 0x100
00213553419i[MEM0 ] allocate_block: block=0xa5 used 0xa7 of 0x100
00213841419i[MEM0 ] allocate_block: block=0xa6 used 0xa8 of 0x100
00214129419i[MEM0 ] allocate_block: block=0xa7 used 0xa9 of 0x100
00214417419i[MEM0 ] allocate_block: block=0xa8 used 0xaa of 0x100
00214705419i[MEM0 ] allocate_block: block=0xa9 used 0xab of 0x100
00214993419i[MEM0 ] allocate_block: block=0xaa used 0xac of 0x100
00215281419i[MEM0 ] allocate_block: block=0xab used 0xad of 0x100
00215569419i[MEM0 ] allocate_block: block=0xac used 0xae of 0x100
00215857419i[MEM0 ] allocate_block: block=0xad used 0xaf of 0x100
00216145419i[MEM0 ] allocate_block: block=0xae used 0xb0 of 0x100
00216433419i[MEM0 ] allocate_block: block=0xaf used 0xb1 of 0x100
00216721419i[MEM0 ] allocate_block: block=0xb0 used 0xb2 of 0x100
00217009419i[MEM0 ] allocate_block: block=0xb1 used 0xb3 of 0x100
00217297419i[MEM0 ] allocate_block: block=0xb2 used 0xb4 of 0x100
00217585419i[MEM0 ] allocate_block: block=0xb3 used 0xb5 of 0x100
00217873419i[MEM0 ] allocate_block: block=0xb4 used 0xb6 of 0x100
00218161419i[MEM0 ] allocate_block: block=0xb5 used 0xb7 of 0x100
00218449419i[MEM0 ] allocate_block: block=0xb6 used 0xb8 of 0x100
00218737419i[MEM0 ] allocate_block: block=0xb7 used 0xb9 of 0x100
00219025419i[MEM0 ] allocate_block: block=0xb8 used 0xba of 0x100
00219313419i[MEM0 ] allocate_block: block=0xb9 used 0xbb of 0x100
00219601419i[MEM0 ] allocate_block: block=0xba used 0xbc of 0x100
00219889419i[MEM0 ] allocate_block: block=0xbb used 0xbd of 0x100
00220177419i[MEM0 ] allocate_block: block=0xbc used 0xbe of 0x100
00220465419i[MEM0 ] allocate_block: block=0xbd used 0xbf of 0x100
00220753419i[MEM0 ] allocate_block: block=0xbe used 0xc0 of 0x100
00221041419i[MEM0 ] allocate_block: block=0xbf used 0xc1 of 0x100
00221329419i[MEM0 ] allocate_block: block=0xc0 used 0xc2 of 0x100
00221617419i[MEM0 ] allocate_block: block=0xc1 used 0xc3 of 0x100
00221905419i[MEM0 ] allocate_block: block=0xc2 used 0xc4 of 0x100
00222193419i[MEM0 ] allocate_block: block=0xc3 used 0xc5 of 0x100
00222481419i[MEM0 ] allocate_block: block=0xc4 used 0xc6 of 0x100
00222769419i[MEM0 ] allocate_block: block=0xc5 used 0xc7 of 0x100
00223057419i[MEM0 ] allocate_block: block=0xc6 used 0xc8 of 0x100
00223345419i[MEM0 ] allocate_block: block=0xc7 used 0xc9 of 0x100
00223633419i[MEM0 ] allocate_block: block=0xc8 used 0xca of 0x100
00223921419i[MEM0 ] allocate_block: block=0xc9 used 0xcb of 0x100
00224209419i[MEM0 ] allocate_block: block=0xca used 0xcc of 0x100
00224497419i[MEM0 ] allocate_block: block=0xcb used 0xcd of 0x100
00224785419i[MEM0 ] allocate_block: block=0xcc used 0xce of 0x100
00225073419i[MEM0 ] allocate_block: block=0xcd used 0xcf of 0x100
00225361419i[MEM0 ] allocate_block: block=0xce used 0xd0 of 0x100
00225649419i[MEM0 ] allocate_block: block=0xcf used 0xd1 of 0x100
00225937419i[MEM0 ] allocate_block: block=0xd0 used 0xd2 of 0x100
00226225419i[MEM0 ] allocate_block: block=0xd1 used 0xd3 of 0x100
00226513419i[MEM0 ] allocate_block: block=0xd2 used 0xd4 of 0x100
00226801419i[MEM0 ] allocate_block: block=0xd3 used 0xd5 of 0x100
00227089419i[MEM0 ] allocate_block: block=0xd4 used 0xd6 of 0x100
00227377419i[MEM0 ] allocate_block: block=0xd5 used 0xd7 of 0x100
00227665419i[MEM0 ] allocate_block: block=0xd6 used 0xd8 of 0x100
00227953419i[MEM0 ] allocate_block: block=0xd7 used 0xd9 of 0x100
00228241419i[MEM0 ] allocate_block: block=0xd8 used 0xda of 0x100
00228529419i[MEM0 ] allocate_block: block=0xd9 used 0xdb of 0x100
00228817419i[MEM0 ] allocate_block: block=0xda used 0xdc of 0x100
00229105419i[MEM0 ] allocate_block: block=0xdb used 0xdd of 0x100
00229393419i[MEM0 ] allocate_block: block=0xdc used 0xde of 0x100
00229681419i[MEM0 ] allocate_block: block=0xdd used 0xdf of 0x100
00229969419i[MEM0 ] allocate_block: block=0xde used 0xe0 of 0x100
00230257419i[MEM0 ] allocate_block: block=0xdf used 0xe1 of 0x100
00234646742e[SER  ] com1: write to tx hold register when not empty
00234650483e[SER  ] com1: write to tx hold register when not empty
00234654162e[SER  ] com1: write to tx hold register when not empty
00234657833e[SER  ] com1: write to tx hold register when not empty
00234661504e[SER  ] com1: write to tx hold register when not empty
00234665175e[SER  ] com1: write to tx hold register when not empty
00234668846e[SER  ] com1: write to tx hold register when not empty
00234672517e[SER  ] com1: write to tx hold register when not empty
00234676188e[SER  ] com1: write to tx hold register when not empty
00234679859e[SER  ] com1: write to tx hold register when not empty
00234683530e[SER  ] com1: write to tx hold register when not empty
00234688190e[SER  ] com1: write to tx hold register when not empty
00239589188e[SER  ] com1: write to tx hold register when not empty
00239600277e[SER  ] com1: write to tx hold register when not empty
00239611366e[SER  ] com1: write to tx hold register when not empty
00239630106e[SER  ] com1: write to tx hold register when not empty
00239641195e[SER  ] com1: write to tx hold register when not empty
00239652284e[SER  ] com1: write to tx hold register when not empty
00239671024e[SER  ] com1: write to tx hold register when not empty
00239682113e[SER  ] com1: write to tx hold register when not empty
00239693202e[SER  ] com1: write to tx hold register when not empty
00239711942e[SER  ] com1: write to tx hold register when not empty
00239723031e[SER  ] com1: write to tx hold register when not empty
00239734120e[SER  ] com1: write to tx hold register when not empty
00570451645e[SER  ] com1: write to tx hold register when not empty
00570462758e[SER  ] com1: write to tx hold register when not empty
00570473871e[SER  ] com1: write to tx hold register when not empty
00570492659e[SER  ] com1: write to tx hold register when not empty
00570503772e[SER  ] com1: write to tx hold register when not empty
00570514885e[SER  ] com1: write to tx hold register when not empty
00570533673e[SER  ] com1: write to tx hold register when not empty
00570544786e[SER  ] com1: write to tx hold register when not empty
00570555899e[SER  ] com1: write to tx hold register when not empty
00570574687e[SER  ] com1: write to tx hold register when not empty
00570585800e[SER  ] com1: write to tx hold register when not empty
00570596913e[SER  ] com1: write to tx hold register when not empty
00570615701e[SER  ] com1: write to tx hold register when not empty
00570626814e[SER  ] com1: write to tx hold register when not empty
00570637927e[SER  ] com1: write to tx hold register when not empty
00570656715e[SER  ] com1: write to tx hold register when not empty
00570667828e[SER  ] com1: write to tx hold register when not empty
00570678941e[SER  ] com1: write to tx hold register when not empty
00570697729e[SER  ] com1: write to tx hold register when not empty
00570708842e[SER  ] com1: write to tx hold register when not empty
00570719955e[SER  ] com1: write to tx hold register when not empty
00570794387e[SER  ] com1: write to tx hold register when not empty
00570805500e[SER  ] com1: write to tx hold register when not empty
00570824288e[SER  ] com1: write to tx hold register when not empty
00570835401e[SER  ] com1: write to tx hold register when not empty
00570846514e[SER  ] com1: write to tx hold register when not empty
00570865302e[SER  ] com1: write to tx hold register when not empty
00570876415e[SER  ] com1: write to tx hold register when not empty
00570889964e[SER  ] com1: write to tx hold register when not empty
00570894705e[SER  ] com1: write to tx hold register when not empty
00570898376e[SER  ] com1: write to tx hold register when not empty
00570902047e[SER  ] com1: write to tx hold register when not empty
00570905718e[SER  ] com1: write to tx hold register when not empty
00570909389e[SER  ] com1: write to tx hold register when not empty
00570913060e[SER  ] com1: write to tx hold register when not empty
00570916731e[SER  ] com1: write to tx hold register when not empty
00570920402e[SER  ] com1: write to tx hold register when not empty
00570924073e[SER  ] com1: write to tx hold register when not empty
00570927744e[SER  ] com1: write to tx hold register when not empty
00570931415e[SER  ] com1: write to tx hold register when not empty
00570936372e[SER  ] com1: write to tx hold register when not empty
00570990326e[SER  ] com1: write to tx hold register when not empty
00570993997e[SER  ] com1: write to tx hold register when not empty
00570997668e[SER  ] com1: write to tx hold register when not empty
00571001339e[SER  ] com1: write to tx hold register when not empty
00571005010e[SER  ] com1: write to tx hold register when not empty
00571008681e[SER  ] com1: write to tx hold register when not empty
00571012352e[SER  ] com1: write to tx hold register when not empty
00571019658e[SER  ] com1: write to tx hold register when not empty
00571023329e[SER  ] com1: write to tx hold register when not empty
00571027000e[SER  ] com1: write to tx hold register when not empty
00571030671e[SER  ] com1: write to tx hold register when not empty
00571083983e[SER  ] com1: write to tx hold register when not empty
00571087654e[SER  ] com1: write to tx hold register when not empty
00571091325e[SER  ] com1: write to tx hold register when not empty
00571094996e[SER  ] com1: write to tx hold register when not empty
00571098667e[SER  ] com1: write to tx hold register when not empty
00571102949e[SER  ] com1: write to tx hold register when not empty
00571106620e[SER  ] com1: write to tx hold register when not empty
00571110291e[SER  ] com1: write to tx hold register when not empty
00571113962e[SER  ] com1: write to tx hold register when not empty
00571117633e[SER  ] com1: write to tx hold register when not empty
00571121304e[SER  ] com1: write to tx hold register when not empty
00571124975e[SER  ] com1: write to tx hold register when not empty
00571266390e[SER  ] com1: write to tx hold register when not empty
00571270061e[SER  ] com1: write to tx hold register when not empty
00571273732e[SER  ] com1: write to tx hold register when not empty
00571277403e[SER  ] com1: write to tx hold register when not empty
00571281074e[SER  ] com1: write to tx hold register when not empty
00571284745e[SER  ] com1: write to tx hold register when not empty
00571288416e[SER  ] com1: write to tx hold register when not empty
00571292087e[SER  ] com1: write to tx hold register when not empty
00571295758e[SER  ] com1: write to tx hold register when not empty
00571299429e[SER  ] com1: write to tx hold register when not empty
00571303100e[SER  ] com1: write to tx hold register when not empty
00571368227e[SER  ] com1: write to tx hold register when not empty
00571379340e[SER  ] com1: write to tx hold register when not empty
00571398587e[SER  ] com1: write to tx hold register when not empty
00571409700e[SER  ] com1: write to tx hold register when not empty
00571420813e[SER  ] com1: write to tx hold register when not empty
00571551536e[SER  ] com1: write to tx hold register when not empty
00571570324e[SER  ] com1: write to tx hold register when not empty
00571581437e[SER  ] com1: write to tx hold register when not empty
00571592550e[SER  ] com1: write to tx hold register when not empty
00571611338e[SER  ] com1: write to tx hold register when not empty
00571622451e[SER  ] com1: write to tx hold register when not empty
00571633564e[SER  ] com1: write to tx hold register when not empty
00571652352e[SER  ] com1: write to tx hold register when not empty
00571663465e[SER  ] com1: write to tx hold register when not empty
00571674578e[SER  ] com1: write to tx hold register when not empty
00571693366e[SER  ] com1: write to tx hold register when not empty
00571704479e[SER  ] com1: write to tx hold register when not empty
00571715592e[SER  ] com1: write to tx hold register when not empty
00571734380e[SER  ] com1: write to tx hold register when not empty
00571745493e[SER  ] com1: write to tx hold register when not empty
00571756606e[SER  ] com1: write to tx hold register when not empty
00571775394e[SER  ] com1: write to tx hold register when not empty
00571786507e[SER  ] com1: write to tx hold register when not empty
00571797620e[SER  ] com1: write to tx hold register when not empty
00571816408e[SER  ] com1: write to tx hold register when not empty
00571827521e[SER  ] com1: write to tx hold register when not empty
00571838634e[SER  ] com1: write to tx hold register when not empty
00571913066e[SER  ] com1: write to tx hold register when not empty
00571924179e[SER  ] com1: write to tx hold register when not empty
00571935292e[SER  ] com1: write to tx hold register when not empty
00571954080e[SER  ] com1: write to tx hold register when not empty
00571965193e[SER  ] com1: write to tx hold register when not empty
00571976306e[SER  ] com1: write to tx hold register when not empty
00571997530e[SER  ] com1: write to tx hold register when not empty
00572001201e[SER  ] com1: write to tx hold register when not empty
00572004872e[SER  ] com1: write to tx hold register when not empty
00572008543e[SER  ] com1: write to tx hold register when not empty
00572012214e[SER  ] com1: write to tx hold register when not empty
00572015885e[SER  ] com1: write to tx hold register when not empty
00572022921e[SER  ] com1: write to tx hold register when not empty
00572026592e[SER  ] com1: write to tx hold register when not empty
00572030263e[SER  ] com1: write to tx hold register when not empty
00572033934e[SER  ] com1: write to tx hold register when not empty
00572037605e[SER  ] com1: write to tx hold register when not empty
00572041276e[SER  ] com1: write to tx hold register when not empty
00572044947e[SER  ] com1: write to tx hold register when not empty
00572048618e[SER  ] com1: write to tx hold register when not empty
00572106231e[SER  ] com1: write to tx hold register when not empty
00572109902e[SER  ] com1: write to tx hold register when not empty
00572113573e[SER  ] com1: write to tx hold register when not empty
00572117244e[SER  ] com1: write to tx hold register when not empty
00572120915e[SER  ] com1: write to tx hold register when not empty
00572124586e[SER  ] com1: write to tx hold register when not empty
00572128257e[SER  ] com1: write to tx hold register when not empty
00572131928e[SER  ] com1: write to tx hold register when not empty
00572135599e[SER  ] com1: write to tx hold register when not empty
00572139270e[SER  ] com1: write to tx hold register when not empty
00572142941e[SER  ] com1: write to tx hold register when not empty
00572196486e[SER  ] com1: write to tx hold register when not empty
00572200157e[SER  ] com1: write to tx hold register when not empty
00572203828e[SER  ] com1: write to tx hold register when not empty
00572207499e[SER  ] com1: write to tx hold register when not empty
00572211170e[SER  ] com1: write to tx hold register when not empty
00572214841e[SER  ] com1: write to tx hold register when not empty
00572218512e[SER  ] com1: write to tx hold register when not empty
00572222183e[SER  ] com1: write to tx hold register when not empty
00572225854e[SER  ] com1: write to tx hold register when not empty
00572229525e[SER  ] com1: write to tx hold register when not empty
00572233196e[SER  ] com1: write to tx hold register when not empty
00572375681e[SER  ] com1: write to tx hold register when not empty
00572379352e[SER  ] com1: write to tx hold register when not empty
00572383023e[SER  ] com1: write to tx hold register when not empty
00572386694e[SER  ] com1: write to tx hold register when not empty
00572390365e[SER  ] com1: write to tx hold register when not empty
00572394036e[SER  ] com1: write to tx hold register when not empty
00572397707e[SER  ] com1: write to tx hold register when not empty
00572401378e[SER  ] com1: write to tx hold register when not empty
00572405049e[SER  ] com1: write to tx hold register when not empty
00572408720e[SER  ] com1: write to tx hold register when not empty
00572412391e[SER  ] com1: write to tx hold register when not empty
00572477518e[SER  ] com1: write to tx hold register when not empty
00572488631e[SER  ] com1: write to tx hold register when not empty
00572507878e[SER  ] com1: write to tx hold register when not empty
00572518991e[SER  ] com1: write to tx hold register when not empty
00572530104e[SER  ] com1: write to tx hold register when not empty
00572660828e[SER  ] com1: write to tx hold register when not empty
00572679616e[SER  ] com1: write to tx hold register when not empty
00572690729e[SER  ] com1: write to tx hold register when not empty
00572701842e[SER  ] com1: write to tx hold register when not empty
00572720630e[SER  ] com1: write to tx hold register when not empty
00572731743e[SER  ] com1: write to tx hold register when not empty
00572742856e[SER  ] com1: write to tx hold register when not empty
00572761644e[SER  ] com1: write to tx hold register when not empty
00572772757e[SER  ] com1: write to tx hold register when not empty
00572783870e[SER  ] com1: write to tx hold register when not empty
00572802658e[SER  ] com1: write to tx hold register when not empty
00572813771e[SER  ] com1: write to tx hold register when not empty
00572824884e[SER  ] com1: write to tx hold register when not empty
00572843672e[SER  ] com1: write to tx hold register when not empty
00572854785e[SER  ] com1: write to tx hold register when not empty
00572865898e[SER  ] com1: write to tx hold register when not empty
00572884686e[SER  ] com1: write to tx hold register when not empty
00572895799e[SER  ] com1: write to tx hold register when not empty
00572906912e[SER  ] com1: write to tx hold register when not empty
00572925700e[SER  ] com1: write to tx hold register when not empty
00572936813e[SER  ] com1: write to tx hold register when not empty
00572947926e[SER  ] com1: write to tx hold register when not empty
00573022358e[SER  ] com1: write to tx hold register when not empty
00573033471e[SER  ] com1: write to tx hold register when not empty
00573044584e[SER  ] com1: write to tx hold register when not empty
00573063372e[SER  ] com1: write to tx hold register when not empty
00573074485e[SER  ] com1: write to tx hold register when not empty
00573085598e[SER  ] com1: write to tx hold register when not empty
00573106822e[SER  ] com1: write to tx hold register when not empty
00573110493e[SER  ] com1: write to tx hold register when not empty
00573114164e[SER  ] com1: write to tx hold register when not empty
00573117835e[SER  ] com1: write to tx hold register when not empty
00573121506e[SER  ] com1: write to tx hold register when not empty
00573125177e[SER  ] com1: write to tx hold register when not empty
00573132213e[SER  ] com1: write to tx hold register when not empty
00573135884e[SER  ] com1: write to tx hold register when not empty
00573139555e[SER  ] com1: write to tx hold register when not empty
00573143226e[SER  ] com1: write to tx hold register when not empty
00573146897e[SER  ] com1: write to tx hold register when not empty
00573150568e[SER  ] com1: write to tx hold register when not empty
00573154239e[SER  ] com1: write to tx hold register when not empty
00573157910e[SER  ] com1: write to tx hold register when not empty
00573215526e[SER  ] com1: write to tx hold register when not empty
00573219197e[SER  ] com1: write to tx hold register when not empty
00573222868e[SER  ] com1: write to tx hold register when not empty
00573226539e[SER  ] com1: write to tx hold register when not empty
00573230210e[SER  ] com1: write to tx hold register when not empty
00573233881e[SER  ] com1: write to tx hold register when not empty
00573237552e[SER  ] com1: write to tx hold register when not empty
00573241223e[SER  ] com1: write to tx hold register when not empty
00573244894e[SER  ] com1: write to tx hold register when not empty
00573248565e[SER  ] com1: write to tx hold register when not empty
00573252236e[SER  ] com1: write to tx hold register when not empty
00573309095e[SER  ] com1: write to tx hold register when not empty
00573312766e[SER  ] com1: write to tx hold register when not empty
00573316437e[SER  ] com1: write to tx hold register when not empty
00573320108e[SER  ] com1: write to tx hold register when not empty
00573323779e[SER  ] com1: write to tx hold register when not empty
00573327450e[SER  ] com1: write to tx hold register when not empty
00573331121e[SER  ] com1: write to tx hold register when not empty
00573334792e[SER  ] com1: write to tx hold register when not empty
00573338463e[SER  ] com1: write to tx hold register when not empty
00573342134e[SER  ] com1: write to tx hold register when not empty
00573345805e[SER  ] com1: write to tx hold register when not empty
00573488287e[SER  ] com1: write to tx hold register when not empty
00573491958e[SER  ] com1: write to tx hold register when not empty
00573495629e[SER  ] com1: write to tx hold register when not empty
00573499300e[SER  ] com1: write to tx hold register when not empty
00573502971e[SER  ] com1: write to tx hold register when not empty
00573506642e[SER  ] com1: write to tx hold register when not empty
00573510313e[SER  ] com1: write to tx hold register when not empty
00573513984e[SER  ] com1: write to tx hold register when not empty
00573517655e[SER  ] com1: write to tx hold register when not empty
00573521326e[SER  ] com1: write to tx hold register when not empty
00573524997e[SER  ] com1: write to tx hold register when not empty
00573590121e[SER  ] com1: write to tx hold register when not empty
00573601234e[SER  ] com1: write to tx hold register when not empty
00573620481e[SER  ] com1: write to tx hold register when not empty
00573631594e[SER  ] com1: write to tx hold register when not empty
00573642707e[SER  ] com1: write to tx hold register when not empty
00573773457e[SER  ] com1: write to tx hold register when not empty
00573792245e[SER  ] com1: write to tx hold register when not empty
00573803358e[SER  ] com1: write to tx hold register when not empty
00573814471e[SER  ] com1: write to tx hold register when not empty
00573833259e[SER  ] com1: write to tx hold register when not empty
00573844372e[SER  ] com1: write to tx hold register when not empty
00573855485e[SER  ] com1: write to tx hold register when not empty
00573874273e[SER  ] com1: write to tx hold register when not empty
00573885386e[SER  ] com1: write to tx hold register when not empty
00573896499e[SER  ] com1: write to tx hold register when not empty
00573915287e[SER  ] com1: write to tx hold register when not empty
00573926400e[SER  ] com1: write to tx hold register when not empty
00573937513e[SER  ] com1: write to tx hold register when not empty
00573956301e[SER  ] com1: write to tx hold register when not empty
00573967414e[SER  ] com1: write to tx hold register when not empty
00573978527e[SER  ] com1: write to tx hold register when not empty
00573997315e[SER  ] com1: write to tx hold register when not empty
00574008428e[SER  ] com1: write to tx hold register when not empty
00574019541e[SER  ] com1: write to tx hold register when not empty
00574038329e[SER  ] com1: write to tx hold register when not empty
00574049442e[SER  ] com1: write to tx hold register when not empty
00574060555e[SER  ] com1: write to tx hold register when not empty
00574134987e[SER  ] com1: write to tx hold register when not empty
00574146100e[SER  ] com1: write to tx hold register when not empty
00574157213e[SER  ] com1: write to tx hold register when not empty
00574176001e[SER  ] com1: write to tx hold register when not empty
00574187114e[SER  ] com1: write to tx hold register when not empty
00574198227e[SER  ] com1: write to tx hold register when not empty
00574219451e[SER  ] com1: write to tx hold register when not empty
00574223122e[SER  ] com1: write to tx hold register when not empty
00574226793e[SER  ] com1: write to tx hold register when not empty
00574230464e[SER  ] com1: write to tx hold register when not empty
00574234135e[SER  ] com1: write to tx hold register when not empty
00574237806e[SER  ] com1: write to tx hold register when not empty
00574244842e[SER  ] com1: write to tx hold register when not empty
00574248513e[SER  ] com1: write to tx hold register when not empty
00574252184e[SER  ] com1: write to tx hold register when not empty
00574255855e[SER  ] com1: write to tx hold register when not empty
00574259526e[SER  ] com1: write to tx hold register when not empty
00574263197e[SER  ] com1: write to tx hold register when not empty
00574266868e[SER  ] com1: write to tx hold register when not empty
00574270539e[SER  ] com1: write to tx hold register when not empty
00574328155e[SER  ] com1: write to tx hold register when not empty
00574331826e[SER  ] com1: write to tx hold register when not empty
00574335497e[SER  ] com1: write to tx hold register when not empty
00574339168e[SER  ] com1: write to tx hold register when not empty
00574342839e[SER  ] com1: write to tx hold register when not empty
00574346510e[SER  ] com1: write to tx hold register when not empty
00574350181e[SER  ] com1: write to tx hold register when not empty
00574353852e[SER  ] com1: write to tx hold register when not empty
00574357523e[SER  ] com1: write to tx hold register when not empty
00574361194e[SER  ] com1: write to tx hold register when not empty
00574364865e[SER  ] com1: write to tx hold register when not empty
00574419059e[SER  ] com1: write to tx hold register when not empty
00574422730e[SER  ] com1: write to tx hold register when not empty
00574426401e[SER  ] com1: write to tx hold register when not empty
00574430072e[SER  ] com1: write to tx hold register when not empty
00574433743e[SER  ] com1: write to tx hold register when not empty
00574437414e[SER  ] com1: write to tx hold register when not empty
00574441085e[SER  ] com1: write to tx hold register when not empty
00574444756e[SER  ] com1: write to tx hold register when not empty
00574448427e[SER  ] com1: write to tx hold register when not empty
00574452098e[SER  ] com1: write to tx hold register when not empty
00574455769e[SER  ] com1: write to tx hold register when not empty
00574509972e[SER  ] com1: write to tx hold register when not empty
00574513643e[SER  ] com1: write to tx hold register when not empty
00574517314e[SER  ] com1: write to tx hold register when not empty
00574520985e[SER  ] com1: write to tx hold register when not empty
00574524656e[SER  ] com1: write to tx hold register when not empty
00574528327e[SER  ] com1: write to tx hold register when not empty
00574531998e[SER  ] com1: write to tx hold register when not empty
00574535669e[SER  ] com1: write to tx hold register when not empty
00574539340e[SER  ] com1: write to tx hold register when not empty
00574543011e[SER  ] com1: write to tx hold register when not empty
00574546682e[SER  ] com1: write to tx hold register when not empty
00574610851e[SER  ] com1: write to tx hold register when not empty
00574614522e[SER  ] com1: write to tx hold register when not empty
00574618193e[SER  ] com1: write to tx hold register when not empty
00574621864e[SER  ] com1: write to tx hold register when not empty
00574625535e[SER  ] com1: write to tx hold register when not empty
00574629206e[SER  ] com1: write to tx hold register when not empty
00574632877e[SER  ] com1: write to tx hold register when not empty
00574636548e[SER  ] com1: write to tx hold register when not empty
00574640219e[SER  ] com1: write to tx hold register when not empty
00574643890e[SER  ] com1: write to tx hold register when not empty
00574647561e[SER  ] com1: write to tx hold register when not empty
00574701870e[SER  ] com1: write to tx hold register when not empty
00574705541e[SER  ] com1: write to tx hold register when not empty
00574709212e[SER  ] com1: write to tx hold register when not empty
00574712883e[SER  ] com1: write to tx hold register when not empty
00574716554e[SER  ] com1: write to tx hold register when not empty
00574720225e[SER  ] com1: write to tx hold register when not empty
00574723896e[SER  ] com1: write to tx hold register when not empty
00574727567e[SER  ] com1: write to tx hold register when not empty
00574731238e[SER  ] com1: write to tx hold register when not empty
00574735601e[SER  ] com1: write to tx hold register when not empty
00574739272e[SER  ] com1: write to tx hold register when not empty
00574742943e[SER  ] com1: write to tx hold register when not empty
00574796182e[SER  ] com1: write to tx hold register when not empty
00574799853e[SER  ] com1: write to tx hold register when not empty
00574803524e[SER  ] com1: write to tx hold register when not empty
00574807195e[SER  ] com1: write to tx hold register when not empty
00574810866e[SER  ] com1: write to tx hold register when not empty
00574814537e[SER  ] com1: write to tx hold register when not empty
00574818900e[SER  ] com1: write to tx hold register when not empty
00574822571e[SER  ] com1: write to tx hold register when not empty
00574826242e[SER  ] com1: write to tx hold register when not empty
00574829913e[SER  ] com1: write to tx hold register when not empty
00574833584e[SER  ] com1: write to tx hold register when not empty
00574837255e[SER  ] com1: write to tx hold register when not empty
00574978667e[SER  ] com1: write to tx hold register when not empty
00574982338e[SER  ] com1: write to tx hold register when not empty
00574986009e[SER  ] com1: write to tx hold register when not empty
00574989680e[SER  ] com1: write to tx hold register when not empty
00574993351e[SER  ] com1: write to tx hold register when not empty
00574997022e[SER  ] com1: write to tx hold register when not empty
00575000693e[SER  ] com1: write to tx hold register when not empty
00575004364e[SER  ] com1: write to tx hold register when not empty
00575008035e[SER  ] com1: write to tx hold register when not empty
00575011706e[SER  ] com1: write to tx hold register when not empty
00575015377e[SER  ] com1: write to tx hold register when not empty
00575080501e[SER  ] com1: write to tx hold register when not empty
00575091614e[SER  ] com1: write to tx hold register when not empty
00575110861e[SER  ] com1: write to tx hold register when not empty
00575121974e[SER  ] com1: write to tx hold register when not empty
00575133087e[SER  ] com1: write to tx hold register when not empty
00575263838e[SER  ] com1: write to tx hold register when not empty
00575282626e[SER  ] com1: write to tx hold register when not empty
00575293739e[SER  ] com1: write to tx hold register when not empty
00575304852e[SER  ] com1: write to tx hold register when not empty
00575323640e[SER  ] com1: write to tx hold register when not empty
00575334753e[SER  ] com1: write to tx hold register when not empty
00575345866e[SER  ] com1: write to tx hold register when not empty
00575364654e[SER  ] com1: write to tx hold register when not empty
00575375767e[SER  ] com1: write to tx hold register when not empty
00575386880e[SER  ] com1: write to tx hold register when not empty
00575405668e[SER  ] com1: write to tx hold register when not empty
00575416781e[SER  ] com1: write to tx hold register when not empty
00575427894e[SER  ] com1: write to tx hold register when not empty
00575446682e[SER  ] com1: write to tx hold register when not empty
00575457795e[SER  ] com1: write to tx hold register when not empty
00575468908e[SER  ] com1: write to tx hold register when not empty
00575487696e[SER  ] com1: write to tx hold register when not empty
00575498809e[SER  ] com1: write to tx hold register when not empty
00575509922e[SER  ] com1: write to tx hold register when not empty
00575528710e[SER  ] com1: write to tx hold register when not empty
00575539823e[SER  ] com1: write to tx hold register when not empty
00575550936e[SER  ] com1: write to tx hold register when not empty
00575625368e[SER  ] com1: write to tx hold register when not empty
00575636481e[SER  ] com1: write to tx hold register when not empty
00575647594e[SER  ] com1: write to tx hold register when not empty
00575666382e[SER  ] com1: write to tx hold register when not empty
00575677495e[SER  ] com1: write to tx hold register when not empty
00575688608e[SER  ] com1: write to tx hold register when not empty
00575709832e[SER  ] com1: write to tx hold register when not empty
00575713503e[SER  ] com1: write to tx hold register when not empty
00575717174e[SER  ] com1: write to tx hold register when not empty
00575720845e[SER  ] com1: write to tx hold register when not empty
00575724516e[SER  ] com1: write to tx hold register when not empty
00575728187e[SER  ] com1: write to tx hold register when not empty
00575735223e[SER  ] com1: write to tx hold register when not empty
00575738894e[SER  ] com1: write to tx hold register when not empty
00575742565e[SER  ] com1: write to tx hold register when not empty
00575746236e[SER  ] com1: write to tx hold register when not empty
00575749907e[SER  ] com1: write to tx hold register when not empty
00575753578e[SER  ] com1: write to tx hold register when not empty
00575757249e[SER  ] com1: write to tx hold register when not empty
00575760920e[SER  ] com1: write to tx hold register when not empty
00575818536e[SER  ] com1: write to tx hold register when not empty
00575822207e[SER  ] com1: write to tx hold register when not empty
00575825878e[SER  ] com1: write to tx hold register when not empty
00575829549e[SER  ] com1: write to tx hold register when not empty
00575833220e[SER  ] com1: write to tx hold register when not empty
00575836891e[SER  ] com1: write to tx hold register when not empty
00575840562e[SER  ] com1: write to tx hold register when not empty
00575844233e[SER  ] com1: write to tx hold register when not empty
00575847904e[SER  ] com1: write to tx hold register when not empty
00575851575e[SER  ] com1: write to tx hold register when not empty
00575855246e[SER  ] com1: write to tx hold register when not empty
00587156558e[SER  ] com1: write to tx hold register when not empty
00587160229e[SER  ] com1: write to tx hold register when not empty
00587163900e[SER  ] com1: write to tx hold register when not empty
00587167571e[SER  ] com1: write to tx hold register when not empty
00587171242e[SER  ] com1: write to tx hold register when not empty
00587174913e[SER  ] com1: write to tx hold register when not empty
00587275736e[SER  ] com1: write to tx hold register when not empty
00587281314e[SER  ] com1: write to tx hold register when not empty
00587284985e[SER  ] com1: write to tx hold register when not empty
00587288656e[SER  ] com1: write to tx hold register when not empty
00587292327e[SER  ] com1: write to tx hold register when not empty
00587295998e[SER  ] com1: write to tx hold register when not empty
00587299669e[SER  ] com1: write to tx hold register when not empty
00587303340e[SER  ] com1: write to tx hold register when not empty
00587307011e[SER  ] com1: write to tx hold register when not empty
00587310682e[SER  ] com1: write to tx hold register when not empty
00587314353e[SER  ] com1: write to tx hold register when not empty
00587318024e[SER  ] com1: write to tx hold register when not empty
00587370880e[SER  ] com1: write to tx hold register when not empty
00587374551e[SER  ] com1: write to tx hold register when not empty
00587378222e[SER  ] com1: write to tx hold register when not empty
00587381893e[SER  ] com1: write to tx hold register when not empty
00587385564e[SER  ] com1: write to tx hold register when not empty
00587389235e[SER  ] com1: write to tx hold register when not empty
00587392906e[SER  ] com1: write to tx hold register when not empty
00587396577e[SER  ] com1: write to tx hold register when not empty
00587400248e[SER  ] com1: write to tx hold register when not empty
00587403919e[SER  ] com1: write to tx hold register when not empty
00587407590e[SER  ] com1: write to tx hold register when not empty
00587654977e[SER  ] com1: write to tx hold register when not empty
00587658648e[SER  ] com1: write to tx hold register when not empty
00587662319e[SER  ] com1: write to tx hold register when not empty
00587665990e[SER  ] com1: write to tx hold register when not empty
00587669661e[SER  ] com1: write to tx hold register when not empty
00587673332e[SER  ] com1: write to tx hold register when not empty
00587677003e[SER  ] com1: write to tx hold register when not empty
00587680674e[SER  ] com1: write to tx hold register when not empty
00587684345e[SER  ] com1: write to tx hold register when not empty
00587688016e[SER  ] com1: write to tx hold register when not empty
00587691687e[SER  ] com1: write to tx hold register when not empty
00587834221e[SER  ] com1: write to tx hold register when not empty
00587837892e[SER  ] com1: write to tx hold register when not empty
00587841563e[SER  ] com1: write to tx hold register when not empty
00587845234e[SER  ] com1: write to tx hold register when not empty
00587848905e[SER  ] com1: write to tx hold register when not empty
00587852576e[SER  ] com1: write to tx hold register when not empty
00587856247e[SER  ] com1: write to tx hold register when not empty
00587859918e[SER  ] com1: write to tx hold register when not empty
00587863589e[SER  ] com1: write to tx hold register when not empty
00587867260e[SER  ] com1: write to tx hold register when not empty
00587870931e[SER  ] com1: write to tx hold register when not empty
00587936471e[SER  ] com1: write to tx hold register when not empty
00587947792e[SER  ] com1: write to tx hold register when not empty
00587966996e[SER  ] com1: write to tx hold register when not empty
00587978317e[SER  ] com1: write to tx hold register when not empty
00587989638e[SER  ] com1: write to tx hold register when not empty
00588121575e[SER  ] com1: write to tx hold register when not empty
00588140779e[SER  ] com1: write to tx hold register when not empty
00588152100e[SER  ] com1: write to tx hold register when not empty
00588163421e[SER  ] com1: write to tx hold register when not empty
00588182625e[SER  ] com1: write to tx hold register when not empty
00588193946e[SER  ] com1: write to tx hold register when not empty
00588216525e[SER  ] com1: write to tx hold register when not empty
00588227846e[SER  ] com1: write to tx hold register when not empty
00588239167e[SER  ] com1: write to tx hold register when not empty
00588258371e[SER  ] com1: write to tx hold register when not empty
00588269692e[SER  ] com1: write to tx hold register when not empty
00588281013e[SER  ] com1: write to tx hold register when not empty
00588300217e[SER  ] com1: write to tx hold register when not empty
00588311538e[SER  ] com1: write to tx hold register when not empty
00588322859e[SER  ] com1: write to tx hold register when not empty
00588342063e[SER  ] com1: write to tx hold register when not empty
00588353384e[SER  ] com1: write to tx hold register when not empty
00588364705e[SER  ] com1: write to tx hold register when not empty
00588383909e[SER  ] com1: write to tx hold register when not empty
00588395230e[SER  ] com1: write to tx hold register when not empty
00588406551e[SER  ] com1: write to tx hold register when not empty
00588481607e[SER  ] com1: write to tx hold register when not empty
00588492928e[SER  ] com1: write to tx hold register when not empty
00588512132e[SER  ] com1: write to tx hold register when not empty
00588523453e[SER  ] com1: write to tx hold register when not empty
00588534774e[SER  ] com1: write to tx hold register when not empty
00588553978e[SER  ] com1: write to tx hold register when not empty
00588565299e[SER  ] com1: write to tx hold register when not empty
00588579004e[SER  ] com1: write to tx hold register when not empty
00588583718e[SER  ] com1: write to tx hold register when not empty
00588587389e[SER  ] com1: write to tx hold register when not empty
00588591060e[SER  ] com1: write to tx hold register when not empty
00588594731e[SER  ] com1: write to tx hold register when not empty
00588598402e[SER  ] com1: write to tx hold register when not empty
00588602073e[SER  ] com1: write to tx hold register when not empty
00588605744e[SER  ] com1: write to tx hold register when not empty
00588609415e[SER  ] com1: write to tx hold register when not empty
00588613086e[SER  ] com1: write to tx hold register when not empty
00588616757e[SER  ] com1: write to tx hold register when not empty
00588620428e[SER  ] com1: write to tx hold register when not empty
00588625385e[SER  ] com1: write to tx hold register when not empty
00588679443e[SER  ] com1: write to tx hold register when not empty
00588683114e[SER  ] com1: write to tx hold register when not empty
00588686785e[SER  ] com1: write to tx hold register when not empty
00588690456e[SER  ] com1: write to tx hold register when not empty
00588694127e[SER  ] com1: write to tx hold register when not empty
00588697798e[SER  ] com1: write to tx hold register when not empty
00588701469e[SER  ] com1: write to tx hold register when not empty
00588708667e[SER  ] com1: write to tx hold register when not empty
00588712338e[SER  ] com1: write to tx hold register when not empty
00588716009e[SER  ] com1: write to tx hold register when not empty
00588719680e[SER  ] com1: write to tx hold register when not empty
00588775623e[SER  ] com1: write to tx hold register when not empty
00588779294e[SER  ] com1: write to tx hold register when not empty
00588782965e[SER  ] com1: write to tx hold register when not empty
00588786706e[SER  ] com1: write to tx hold register when not empty
00588791999e[SER  ] com1: write to tx hold register when not empty
00588795664e[SER  ] com1: write to tx hold register when not empty
00588799329e[SER  ] com1: write to tx hold register when not empty
00588802994e[SER  ] com1: write to tx hold register when not empty
00588806670e[SER  ] com1: write to tx hold register when not empty
00588810341e[SER  ] com1: write to tx hold register when not empty
00588814012e[SER  ] com1: write to tx hold register when not empty
00588817683e[SER  ] com1: write to tx hold register when not empty
00588821354e[SER  ] com1: write to tx hold register when not empty
00588825025e[SER  ] com1: write to tx hold register when not empty
00588828696e[SER  ] com1: write to tx hold register when not empty
00588833626e[SER  ] com1: write to tx hold register when not empty
00588837305e[SER  ] com1: write to tx hold register when not empty
00588840976e[SER  ] com1: write to tx hold register when not empty
00588844647e[SER  ] com1: write to tx hold register when not empty
00588848318e[SER  ] com1: write to tx hold register when not empty
00588851989e[SER  ] com1: write to tx hold register when not empty
00588855730e[SER  ] com1: write to tx hold register when not empty
00588859409e[SER  ] com1: write to tx hold register when not empty
00588863080e[SER  ] com1: write to tx hold register when not empty
00588866751e[SER  ] com1: write to tx hold register when not empty
00588870422e[SER  ] com1: write to tx hold register when not empty
00588875271e[SER  ] com1: write to tx hold register when not empty
00588878942e[SER  ] com1: write to tx hold register when not empty
00588882613e[SER  ] com1: write to tx hold register when not empty
00588886354e[SER  ] com1: write to tx hold register when not empty
00588890033e[SER  ] com1: write to tx hold register when not empty
00588893704e[SER  ] com1: write to tx hold register when not empty
00588897375e[SER  ] com1: write to tx hold register when not empty
00588901046e[SER  ] com1: write to tx hold register when not empty
00588904717e[SER  ] com1: write to tx hold register when not empty
00588908388e[SER  ] com1: write to tx hold register when not empty
00588912059e[SER  ] com1: write to tx hold register when not empty
00588916909e[SER  ] com1: write to tx hold register when not empty
00588920574e[SER  ] com1: write to tx hold register when not empty
00588924239e[SER  ] com1: write to tx hold register when not empty
00588927918e[SER  ] com1: write to tx hold register when not empty
00588931589e[SER  ] com1: write to tx hold register when not empty
00588935260e[SER  ] com1: write to tx hold register when not empty
00588938931e[SER  ] com1: write to tx hold register when not empty
00588942602e[SER  ] com1: write to tx hold register when not empty
00588946273e[SER  ] com1: write to tx hold register when not empty
00588949944e[SER  ] com1: write to tx hold register when not empty
00588953615e[SER  ] com1: write to tx hold register when not empty
00588958573e[SER  ] com1: write to tx hold register when not empty
00588962238e[SER  ] com1: write to tx hold register when not empty
00588965903e[SER  ] com1: write to tx hold register when not empty
00588969582e[SER  ] com1: write to tx hold register when not empty
00588973253e[SER  ] com1: write to tx hold register when not empty
00588976924e[SER  ] com1: write to tx hold register when not empty
00588980595e[SER  ] com1: write to tx hold register when not empty
00588984266e[SER  ] com1: write to tx hold register when not empty
00588987937e[SER  ] com1: write to tx hold register when not empty
00588991608e[SER  ] com1: write to tx hold register when not empty
00588995279e[SER  ] com1: write to tx hold register when not empty
00589000209e[SER  ] com1: write to tx hold register when not empty
00589003880e[SER  ] com1: write to tx hold register when not empty
00589007551e[SER  ] com1: write to tx hold register when not empty
00589059777e[SER  ] com1: write to tx hold register when not empty
00589063448e[SER  ] com1: write to tx hold register when not empty
00589067119e[SER  ] com1: write to tx hold register when not empty
00589070790e[SER  ] com1: write to tx hold register when not empty
00589074461e[SER  ] com1: write to tx hold register when not empty
00589078132e[SER  ] com1: write to tx hold register when not empty
00589180617e[SER  ] com1: write to tx hold register when not empty
00589184288e[SER  ] com1: write to tx hold register when not empty
00589187959e[SER  ] com1: write to tx hold register when not empty
00589191630e[SER  ] com1: write to tx hold register when not empty
00589195301e[SER  ] com1: write to tx hold register when not empty
00589198972e[SER  ] com1: write to tx hold register when not empty
00589202643e[SER  ] com1: write to tx hold register when not empty
00589208464e[SER  ] com1: write to tx hold register when not empty
00589212135e[SER  ] com1: write to tx hold register when not empty
00589215806e[SER  ] com1: write to tx hold register when not empty
00589219477e[SER  ] com1: write to tx hold register when not empty
00589223148e[SER  ] com1: write to tx hold register when not empty
00589363855e[SER  ] com1: write to tx hold register when not empty
00589367526e[SER  ] com1: write to tx hold register when not empty
00589371197e[SER  ] com1: write to tx hold register when not empty
00589374868e[SER  ] com1: write to tx hold register when not empty
00589378539e[SER  ] com1: write to tx hold register when not empty
00589382210e[SER  ] com1: write to tx hold register when not empty
00589385881e[SER  ] com1: write to tx hold register when not empty
00589389552e[SER  ] com1: write to tx hold register when not empty
00589393223e[SER  ] com1: write to tx hold register when not empty
00589396894e[SER  ] com1: write to tx hold register when not empty
00589400565e[SER  ] com1: write to tx hold register when not empty
02236950000p[WGUI ] >>PANIC<< POWER button turned off.
02236950000i[CPU0 ] CPU is in protected mode (active)
02236950000i[CPU0 ] CS.mode = 32 bit
02236950000i[CPU0 ] SS.mode = 32 bit
02236950000i[CPU0 ] EFER   = 0x00000000
02236950000i[CPU0 ] | EAX=00000000  EBX=00010054  ECX=80111260  EDX=00000024
02236950000i[CPU0 ] | ESP=8010d600  EBP=8010d628  ESI=00010054  EDI=00118a3c
02236950000i[CPU0 ] | IOPL=0 id vip vif ac vm rf nt of df if tf SF zf af pf CF
02236950000i[CPU0 ] | SEG sltr(index|ti|rpl)     base    limit G D
02236950000i[CPU0 ] |  CS:0008( 0001| 0|  0) 00000000 ffffffff 1 1
02236950000i[CPU0 ] |  DS:0010( 0002| 0|  0) 00000000 ffffffff 1 1
02236950000i[CPU0 ] |  SS:0010( 0002| 0|  0) 00000000 ffffffff 1 1
02236950000i[CPU0 ] |  ES:0010( 0002| 0|  0) 00000000 ffffffff 1 1
02236950000i[CPU0 ] |  FS:0018( 0003| 0|  0) 801109f4 00000fff 1 1
02236950000i[CPU0 ] |  GS:0018( 0003| 0|  0) 801109f4 00000fff 1 1
02236950000i[CPU0 ] | EIP=80104c7b (80104c7b)
02236950000i[CPU0 ] | CR0=0xe0010011 CR2=0x00006000
02236950000i[CPU0 ] | CR3=0x003ff000 CR4=0x00000010
02236950000i[CPU0 ] 0x0000000080104c7b>> mov eax, dword ptr ss:[ebp-12] : 8B45F4
02236950000i[CMOS ] Last time is 1403710342 (Wed Jun 25 18:32:22 2014)
02236950000i[     ] restoring default signal behavior
02236950000i[CTRL ] quit_sim called with exit code 1
